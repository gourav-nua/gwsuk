<?php
/**
 * Athlete2 Theme, Custom lazy Load
 *
 * @author      Olegnax
 * @package     Olegnax_Athlete2
 * @copyright   Copyright (c) 2019 Olegnax (https://olegnax.com). All rights reserved.
 * @license     https://www.olegnax.com/license
 */
?>
<?php
/** @var $block \Magento\Catalog\Block\Product\Image */
/** @var $escaper \Magento\Framework\Escaper */
/** @var \Magento\Framework\View\Helper\SecureHtmlRenderer $secureRenderer */
/**
 * Enable lazy loading for images with borders and if variable enable_lazy_loading_for_images_without_borders
 * is enabled in view.xml. Otherwise small size images without borders may be distorted. So max-width is used for them
 * to prevent stretching and lazy loading does not work.
 */
$lazy			 = $this->helper( 'Olegnax\Athlete2\Helper\Helper' )->getConfig( 'athlete2_settings/general/lazyload' );
if ($lazy) : ?>
<span class="product-image-container"
      style="width:<?= $block->escapeHtmlAttr($block->getWidth()) ?>px;">
    <span class="product-image-wrapper"
          style="padding-bottom: <?= ($block->getRatio() * 100) ?>%;">
			 <img class="product-image-photo <?= $escaper->escapeHtmlAttr($block->getClass()) ?> lazy"
				  <?php if (is_array($block->getCustomAttributes())) {
                      foreach ($block->getCustomAttributes() as $name => $value) {
                          printf('%s="%s" ', $escaper->escapeHtmlAttr($name), $escaper->escapeHtmlAttr($value));
                      }
                  } else {
                      echo $block->escapeHtmlAttr($block->getCustomAttributes());
                  } ?>
				 src="<?= $this->getViewFileUrl( 'Olegnax_Core/images/preloader-img.svg' ); ?>"
				  data-original="<?= $escaper->escapeUrl($block->getImageUrl()) ?>"
				  width="<?= $escaper->escapeHtmlAttr($block->getWidth()) ?>"
				  height="<?= $escaper->escapeHtmlAttr($block->getHeight()) ?>"
				  data-ox="product"
				  loading="lazy"
				  alt="<?= $escaper->escapeHtmlAttr($block->getLabel()) ?>"/>
	</span>
</span>
<?php else :
$width = (int)$block->getWidth();
$paddingBottom = $block->getRatio() * 100;
    $borders = (bool)$block->getVar('product_image_white_borders', 'Magento_Catalog');
    $enableLazyLoadingWithoutBorders = (bool)$block->getVar(
        'enable_lazy_loading_for_images_without_borders',
        'Magento_Catalog'
    );
?>
<span class="product-image-container product-image-container-<?= /* @noEscape */ $block->getProductId() ?>">
    <span class="product-image-wrapper">
        	<img class="product-image-photo <?= $escaper->escapeHtmlAttr($block->getClass()) ?>"
			  <?php if (is_array($block->getCustomAttributes())) {
				  foreach ($block->getCustomAttributes() as $name => $value) {
					  printf('%s="%s" ', $escaper->escapeHtmlAttr($name),$escaper->escapeHtmlAttr($value));
				  }
			  } else {
				  echo $escaper->escapeHtmlAttr($block->getCustomAttributes());
			  } ?>
            src="<?= $escaper->escapeUrl($block->getImageUrl()) ?>"
            loading="lazy"
			data-ox="product"
            <?php if ($borders || $enableLazyLoadingWithoutBorders): ?>
				width="<?= $escaper->escapeHtmlAttr($block->getWidth()) ?>"
				height="<?= $escaper->escapeHtmlAttr($block->getHeight()) ?>"
            <?php else: ?>
				max-width="<?= $escaper->escapeHtmlAttr($block->getWidth()) ?>"
				max-height="<?= $escaper->escapeHtmlAttr($block->getHeight()) ?>"
            <?php endif; ?>
            alt="<?= $escaper->escapeHtmlAttr($block->getLabel()) ?>"/>
	</span>
</span>
<?php
$styles = <<<STYLE
.product-image-container-{$block->getProductId()} {
    width: {$width}px;
}
.product-image-container-{$block->getProductId()} span.product-image-wrapper {
    padding-bottom: {$paddingBottom}%;
}
STYLE;
//In case a script was using "style" attributes of these elements
$script = <<<SCRIPT
prodImageContainers = document.querySelectorAll(".product-image-container-{$block->getProductId()}");
for (var i = 0; i < prodImageContainers.length; i++) {
    prodImageContainers[i].style.width = "{$width}px";
}
prodImageContainersWrappers = document.querySelectorAll(
    ".product-image-container-{$block->getProductId()}  span.product-image-wrapper"
);
for (var i = 0; i < prodImageContainersWrappers.length; i++) {
    prodImageContainersWrappers[i].style.paddingBottom = "{$paddingBottom}%";
}
SCRIPT;

?>
<?= /* @noEscape */ $secureRenderer->renderTag('style', [], $styles, false) ?>
<?= /* @noEscape */ $secureRenderer->renderTag('script', ['type' => 'text/javascript'], $script, false) ?>
<?php endif;